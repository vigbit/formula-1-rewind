[{"/Users/Vignesh/React/formula-1-rewind/src/components/Drawer/Drawer.jsx":"1","/Users/Vignesh/React/formula-1-rewind/src/App.js":"2","/Users/Vignesh/React/formula-1-rewind/src/index.js":"3","/Users/Vignesh/React/formula-1-rewind/src/components/Cards/Cards.jsx":"4","/Users/Vignesh/React/formula-1-rewind/src/components/ContentTabs/ContentTabs.jsx":"5","/Users/Vignesh/React/formula-1-rewind/src/api/index.js":"6","/Users/Vignesh/React/formula-1-rewind/src/components/Content/Content.jsx":"7"},{"size":5235,"mtime":1612350871396,"results":"8","hashOfConfig":"9"},{"size":380,"mtime":1612348310530,"results":"10","hashOfConfig":"9"},{"size":143,"mtime":1612238807445,"results":"11","hashOfConfig":"9"},{"size":2633,"mtime":1612372267161,"results":"12","hashOfConfig":"9"},{"size":6803,"mtime":1612374423025,"results":"13","hashOfConfig":"9"},{"size":3651,"mtime":1612374191352,"results":"14","hashOfConfig":"9"},{"size":536,"mtime":1612238713918,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1nvzt1i",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"19"},"/Users/Vignesh/React/formula-1-rewind/src/components/Drawer/Drawer.jsx",["37"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport Cards from '../Cards/Cards';\nimport Content from '../Content/Content';\nimport ContentTabs from '../ContentTabs/ContentTabs'\n\nimport { fetchSeasons } from '../../api'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  drawerTitle: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\n\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [showContent, setShowContent] = useState(false);\n  const [seasonsData, setSeasonsData] = useState([]);\n  const [year, setYear] = useState();\n  const [raceRound, setRaceRound] = useState();\n  const [raceYear, setRaceYear] = useState();\n  \n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setSeasonsData(await fetchSeasons())\n    }\n\n    fetchAPI();\n  }, []);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleShowContent = (round, year) => {\n    setShowContent(!showContent);\n    setRaceRound(round);\n    setRaceYear(year);\n  }\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Typography variant=\"h6\" gutterBottom className={classes.drawerTitle} >Seasons</Typography>\n      <Divider />\n      <List>\n        {seasonsData.map((text, index) => (\n          <ListItem button key={index} onClick={() => setYear(text.year)}>\n            <ListItemText primary={text.year} />\n            <ListItemIcon>{<ArrowRightIcon />}</ListItemIcon>\n          </ListItem>\n        )).reverse()}\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Rewind\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div>\n          {showContent && <ContentTabs raceRound={raceRound} raceYear={raceYear}/>}\n        </div>\n        <Cards handleShowContent={handleShowContent} year={year}/>\n      </main>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n",["38","39"],"/Users/Vignesh/React/formula-1-rewind/src/App.js",["40","41"],"import React from 'react';\n\nimport Drawer from './components/Drawer/Drawer';\n\nimport { fetchData, fetchSeasons } from './api'\n\nclass App extends React.Component{\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n    }\n\n    render(){\n        return(\n            <div>\n                <Drawer />\n            </div>\n        )\n    }\n}\n\nexport default App;",["42","43"],"/Users/Vignesh/React/formula-1-rewind/src/index.js",[],["44","45"],"/Users/Vignesh/React/formula-1-rewind/src/components/Cards/Cards.jsx",["46","47","48","49","50"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { fetchSeasonData } from '../../api'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport sampleImage from '../../images/sample.png'\n\nimport { useTheme } from \"@material-ui/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '10px',\n    maxWidth: 345,\n    [theme.breakpoints.down(\"md\")] : {\n    maxWidth: 300\n    },\n    \n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n \n  cover: {\n    width: 50,\n    objectFit: 'contain',\n    \n  }\n}));\n\nexport default function ImgMediaCard({handleShowContent, year}) {\n\n  const [ seasonData, setSeasonData ] = useState([]);\n\n  useEffect( () => {\n    const fetchAPI = async () => {\n      setSeasonData( await fetchSeasonData(year));    \n    }\n    fetchAPI();\n  }, [year]);\n\n  console.log(year)\n\n  console.log(seasonData);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    seasonData\n    ?\n    (<div>\n      <Grid container> \n      \n      { seasonData.map( (data, index) =>(\n          <Grid item xs={12} sm={6} md={3} key={index}>\n          <Card className={classes.root} onClick={() => handleShowContent(data.round, data.season)} >\n            <div className={classes.details}>\n            \n              <CardMedia\n                className={classes.cover}\n                component=\"img\"\n                alt=\"none\"\n                src={sampleImage}\n                title=\"none\"\n              />\n              <CardContent className={classes.content}>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Round {data.round}\n                </Typography>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {data.raceName}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {data.circuitName}\n                </Typography>\n              </CardContent>\n            </div>\n          </Card>\n         \n         </Grid>\n        \n      ))}\n      </Grid>\n    </div>) : null\n\n  );\n}\n","/Users/Vignesh/React/formula-1-rewind/src/components/ContentTabs/ContentTabs.jsx",["51","52","53"],"/Users/Vignesh/React/formula-1-rewind/src/api/index.js",[],"/Users/Vignesh/React/formula-1-rewind/src/components/Content/Content.jsx",["54"],"import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport ContentTabs from '../ContentTabs/ContentTabs'\n\nexport default function SimpleContainer() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container>\n        {/* <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} /> */}\n        <ContentTabs/>\n      </Container>\n    </React.Fragment>\n  );\n}",{"ruleId":"55","severity":1,"message":"56","line":22,"column":8,"nodeType":"57","messageId":"58","endLine":22,"endColumn":15},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"63","line":5,"column":21,"nodeType":"57","messageId":"58","endLine":5,"endColumn":33},{"ruleId":"55","severity":1,"message":"64","line":10,"column":15,"nodeType":"57","messageId":"58","endLine":10,"endColumn":26},{"ruleId":"59","replacedBy":"65"},{"ruleId":"61","replacedBy":"66"},{"ruleId":"59","replacedBy":"67"},{"ruleId":"61","replacedBy":"68"},{"ruleId":"55","severity":1,"message":"69","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":22},{"ruleId":"55","severity":1,"message":"70","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":19},{"ruleId":"55","severity":1,"message":"71","line":8,"column":8,"nodeType":"57","messageId":"58","endLine":8,"endColumn":14},{"ruleId":"55","severity":1,"message":"72","line":18,"column":8,"nodeType":"57","messageId":"58","endLine":18,"endColumn":21},{"ruleId":"55","severity":1,"message":"73","line":60,"column":9,"nodeType":"57","messageId":"58","endLine":60,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":96,"column":5,"nodeType":"76","endLine":96,"endColumn":7,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":103,"column":6,"nodeType":"76","endLine":103,"endColumn":8,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"80","line":112,"column":6,"nodeType":"76","endLine":112,"endColumn":8,"suggestions":"81"},{"ruleId":"55","severity":1,"message":"82","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":18},"no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'fetchSeasons' is defined but never used.","'fetchedData' is assigned a value but never used.",["83"],["84"],["83"],["84"],"'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'useMediaQuery' is defined but never used.","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'raceRound' and 'raceYear'. Either include them or remove the dependency array. If 'setQualiData' needs the current value of 'raceRound', you can also switch to useReducer instead of useState and read 'raceRound' in the reducer.","ArrayExpression",["85"],"React Hook useEffect has missing dependencies: 'raceRound' and 'raceYear'. Either include them or remove the dependency array. If 'setResultsData' needs the current value of 'raceRound', you can also switch to useReducer instead of useState and read 'raceRound' in the reducer.",["86"],"React Hook useEffect has missing dependencies: 'raceRound' and 'raceYear'. Either include them or remove the dependency array. If 'setConstructorsData' needs the current value of 'raceRound', you can also switch to useReducer instead of useState and read 'raceRound' in the reducer.",["87"],"'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},{"desc":"88","fix":"91"},"Update the dependencies array to be: [raceRound, raceYear]",{"range":"92","text":"93"},{"range":"94","text":"93"},{"range":"95","text":"93"},[2438,2440],"[raceRound, raceYear]",[2594,2596],[2787,2789]]